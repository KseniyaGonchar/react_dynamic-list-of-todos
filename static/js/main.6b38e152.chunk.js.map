{"version":3,"sources":["components/TodoList/TodoList.tsx","types/Status.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","_ref","todos","selectedTodoId","onSelect","_jsxs","className","children","_jsx","map","todo","id","completed","title","onClick","type","Status","TodoFilter","query","setQuery","onFilterChange","onChange","event","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseTodoModal","user","setUser","useState","loading","setLoading","useEffect","userId","concat","finally","href","name","App","setTodos","filter","setFilter","selectedTodo","setSelectedTodo","filteredTodos","filterTodos","currentTodos","filterType","item","trimmedQuery","trim","toLowerCase","includes","_Fragment","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b38e152.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId?: number;\n  onSelect?: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect = () => { },\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td\n              className=\"is-vcentered\"\n            >\n              {todo.id}\n            </td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              {todo.completed ? (\n                <p className=\"has-text-success\">\n                  {todo.title}\n                </p>\n              ) : (\n                <p className=\"has-text-danger\">\n                  {todo.title}\n                </p>\n              )}\n\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {todo.id === selectedTodoId ? (\n                <button\n                  onClick={() => onSelect(null)}\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  onClick={() => onSelect(todo)}\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string;\n  setQuery: (newQuery: string) => void;\n  onFilterChange: (newFilter: Status) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  onFilterChange,\n}) => {\n  const selectFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilterChange(event.target.value as Status);\n  };\n\n  const handleInputQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={selectFilter}\n          >\n            <option value={Status.All}>\n              All\n            </option>\n            <option value={Status.Active}>\n              Active\n            </option>\n            <option value={Status.Completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onCloseTodoModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onCloseTodoModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onCloseTodoModal(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {!todo.completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.name}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Status.All);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const filterTodos = (currentTodos: Todo[], filterType: Status) => {\n    let filteredTodos = [...currentTodos];\n\n    if (filterType !== Status.All) {\n      if (filterType !== Status.Active) {\n        filteredTodos = filteredTodos.filter(item => item.completed);\n      } else {\n        filteredTodos = filteredTodos.filter(item => !item.completed);\n      }\n    }\n\n    if (query) {\n      const trimmedQuery = query.trim().toLowerCase();\n\n      filteredTodos = filteredTodos.filter(item => item.title.toLowerCase().includes(trimmedQuery));\n    }\n\n    return filteredTodos;\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = filterTodos(todos, filter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                onFilterChange={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={selectedTodo?.id}\n                  onSelect={setSelectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseTodoModal={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}